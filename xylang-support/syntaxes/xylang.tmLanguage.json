{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "xy",
	"patterns": [
		{
			"include": "#literal"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#expression"
		}
	],
	"repository": {
		"literal": {
			"patterns": [
				{
					"include": "#boolean-literal"
				},
				{
					"include": "#nil-literal"
				},
				{
					"include": "#numeric-literal"
				},
				{
					"include": "#string-literal"
				}
			]
		},
		"expression": {
			"patterns":[
				{
					"include": "#expression-operators"
				}
			]
		},
		"boolean-literal": {
			"patterns": [
				{
					"name": "constant.language.boolean.true.xy",
					"match": "(?<!\\.)\\btrue\\b"
				},
				{
					"name": "constant.language.boolean.false.xy",
					"match": "(?<!\\.)\\bfalse\\b"
				}
			]
		},
		"nil-literal": {
			"name": "constant.language.nil.xy",
			"match": "(?<!\\.)\\bnil\\b"
		},
		"numeric-literal": {
			"patterns": [
				{
					"name": "constant.numeric.hex.xy",
					"match": "\\b0(x|X)[0-9a-fA-F_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"
				},
				{
					"name": "constant.numeric.binary.xy",
					"match": "\\b0(b|B)[01_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"
				},
				{
					"name": "constant.numeric.decimal.xy",
					"match": "\\b([0-9_]+)?\\.[0-9_]+((e|E)[0-9]+)?(F|f|D|d|M|m)?\\b"
				},
				{
					"name": "constant.numeric.decimal.xy",
					"match": "\\b[0-9_]+(e|E)[0-9_]+(F|f|D|d|M|m)?\\b"
				},
				{
					"name": "constant.numeric.decimal.xy",
					"match": "\\b[0-9_]+(F|f|D|d|M|m)\\b"
				},
				{
					"name": "constant.numeric.decimal.xy",
					"match": "\\b[0-9_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\\b"
				}
			]
		},
		"string-literal": {
			"name": "string.quoted.double.xy",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.xy",
					"match": "\\\\."
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.xy",
					"match": "(\\?|\\@|\\~|\\:\\=|\\-\\>|\\:\\>|\\<\\:|\\$|\\#|\\:|\\!)"
				}
			]
		},
		"expression-operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.compound.xy",
					"match": "\\*=|/=|%=|\\+=|-="
				},
				{
					"name": "keyword.operator.assignment.compound.bitwise.xy",
					"match": "\\&=|\\^=|<<=|>>=|\\|="
				},
				{
					"name": "keyword.operator.bitwise.shift.xy",
					"match": "<<|>>"
				},
				{
					"name": "keyword.operator.comparison.xy",
					"match": "==|!="
				},
				{
					"name": "keyword.operator.relational.xy",
					"match": "<=|>=|<|>"
				},
				{
					"name": "keyword.operator.logical.xy",
					"match": "\\!|&&|\\|\\|"
				},
				{
					"name": "keyword.operator.bitwise.xy",
					"match": "\\&|~|\\^|\\|"
				},
				{
					"name": "keyword.operator.assignment.xy",
					"match": "\\="
				},
				{
					"name": "keyword.operator.decrement.xy",
					"match": "--"
				},
				{
					"name": "keyword.operator.increment.xy",
					"match": "\\+\\+"
				},
				{
					"name": "keyword.operator.arithmetic.xy",
					"match": "%|\\*|/|-|\\+"
				},
				{
					"name": "keyword.operator.null-coalescing.xy",
					"match": "\\?\\?"
				}
			]
		}
	},
	"scopeName": "source.xy"
}